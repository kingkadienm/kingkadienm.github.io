(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{269:function(a,e,o){"use strict";o.r(e);var t=o(38),s=Object(t.a)({},function(){var a=this,e=a.$createElement,o=a._self._c||e;return o("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[o("p",[a._v("#Flutter Plugin开发流程")]),a._v(" "),o("h2",{attrs:{id:"package-介绍"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#package-介绍","aria-hidden":"true"}},[a._v("#")]),a._v(" Package 介绍")]),a._v(" "),o("p",[a._v("使用package可以创建可轻松共享的模块化代码。一个最小的package包括")]),a._v(" "),o("ul",[o("li",[o("p",[a._v("一个"),o("code",[a._v("pubspec.yaml")]),a._v("文件：声明了package的名称、版本、作者等的元数据文件。")])]),a._v(" "),o("li",[o("p",[a._v("一个 "),o("code",[a._v("lib")]),a._v(" 文件夹：包括包中公开的(public)代码，最少应有一个<;package-name>.dart`文件")])])]),a._v(" "),o("h3",{attrs:{id:"package-类型"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#package-类型","aria-hidden":"true"}},[a._v("#")]),a._v(" Package 类型")]),a._v(" "),o("p",[a._v("Packages可以包含多种内容：")]),a._v(" "),o("ul",[o("li",[o("p",[a._v("Dart包：其中一些可能包含Flutter的特定功能，因此对Flutter框架具有依赖性，仅将其用于Flutter，例如"),o("a",{attrs:{href:"https://pub.dartlang.org/packages/fluro",target:"_blank",rel:"noopener noreferrer"}},[o("code",[a._v("fluro")]),o("OutboundLink")],1),a._v("包。")])]),a._v(" "),o("li",[o("p",[a._v("插件包：一种专用的Dart包，其中包含用Dart代码编写的API，以及针对Android（使用Java或Kotlin）和/或针对iOS（使用ObjC或Swift）平台的特定实现。一个具体的例子是"),o("a",{attrs:{href:"https://pub.dartlang.org/packages/battery",target:"_blank",rel:"noopener noreferrer"}},[o("code",[a._v("battery")]),o("OutboundLink")],1),a._v("插件包。")])])]),a._v(" "),o("h2",{attrs:{id:"developing-dart-packages"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#developing-dart-packages","aria-hidden":"true"}},[a._v("#")]),a._v(" Developing Dart packages")]),a._v(" "),o("h3",{attrs:{id:"step-1-开发dart包"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-1-开发dart包","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 1: 开发Dart包")]),a._v(" "),o("p",[a._v("要创建Dart包，请使用"),o("code",[a._v("--template=package")]),a._v(" 来执行 "),o("code",[a._v("flutter create")])]),a._v(" "),o("pre",[o("code",[a._v('<span class="noselect" style="">$ </span>flutter create --template=package hello`</pre>\n\n这将在`hello/`文件夹下创建一个具有以下专用内容的package工程：\n')])]),a._v(" "),o("ul",[o("li",[o("p",[o("code",[a._v("lib/hello.dart")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   Package的Dart代码\n")])])]),a._v(" "),o("li",[o("p",[o("code",[a._v("test/hello_test.dart")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   Package的[单元测试](https://flutter.io/testing/#unit-testing)代码.\n")])]),a._v(" "),o("h3",{attrs:{id:"step-2-实现package"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2-实现package","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2: 实现package")]),a._v(" "),o("p",[a._v("对于纯Dart包，只需在主"),o("code",[a._v("lib/&lt;package name>.dart")]),a._v("文件内或"),o("code",[a._v("lib")]),a._v("目录中的文件中添加功能 。")]),a._v(" "),o("p",[a._v("要测试软件包，请在"),o("code",[a._v("test")]),a._v("目录中添加"),o("a",{attrs:{href:"https://flutter.io/testing/#unit-testing",target:"_blank",rel:"noopener noreferrer"}},[a._v("unit tests"),o("OutboundLink")],1),a._v("。")]),a._v(" "),o("p",[a._v("有关如何组织包内容的更多详细信息，请参阅"),o("a",{attrs:{href:"https://www.dartlang.org/guides/libraries/create-library-packages",target:"_blank",rel:"noopener noreferrer"}},[a._v("Dart library package"),o("OutboundLink")],1),a._v("文档。")]),a._v(" "),o("h2",{attrs:{id:"开发插件包"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#开发插件包","aria-hidden":"true"}},[a._v("#")]),a._v(" 开发插件包")]),a._v(" "),o("p",[a._v("如果你想开发一个调用特定平台API的包，你需要开发一个插件包，插件包是Dart包的专用版本。 插件包包含针对Android（Java或Kotlin代码）或iOS（Objective-C或Swift代码）编写的特定于平台的实现（可以同时包含Android和Ios原生的代码）。 API使用"),o("a",{attrs:{href:"https://flutterchina.club/platform-channels/",target:"_blank",rel:"noopener noreferrer"}},[a._v("platform channels"),o("OutboundLink")],1),a._v("连接到特定平台（Android或IOS）。")]),a._v(" "),o("h3",{attrs:{id:"step-1-创建-package"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-1-创建-package","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 1: 创建 package")]),a._v(" "),o("p",[a._v("要创建插件包，请使用"),o("code",[a._v("--template=plugin")]),a._v("参数执行"),o("code",[a._v("flutter create")])]),a._v(" "),o("p",[a._v("使用"),o("code",[a._v("--org")]),a._v("选项指定您的组织，并使用反向域名表示法。该值用于生成的Android和iOS代码中的各种包和包标识符。\n"),o("pre",{staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px","white-space":"pre-wrap",padding:"8.0px 12.0px","line-height":"1.42857",color:"rgb(52,73,94)","background-color":"rgb(245,245,245)",border:"1.0px solid rgb(204,204,204)","margin-top":"25.0px","margin-bottom":"25.0px"}},[o("code",[a._v('<span class="noselect" style="">$ </span>flutter create --org com.example --template=plugin hello')])])]),a._v(" "),o("p",[a._v("这将在"),o("code",[a._v("hello/")]),a._v("文件夹下创建一个具有以下专用内容的插件工程：")])]),a._v(" "),o("li",[o("p",[o("code",[a._v("lib/hello.dart")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   插件包的Dart API.\n")])])]),a._v(" "),o("li",[o("p",[o("code",[a._v("android/src/main/java/com/yourcompany/hello/HelloPlugin.java")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   插件包API的Android实现.\n")])])]),a._v(" "),o("li",[o("p",[o("code",[a._v("ios/Classes/HelloPlugin.m")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   插件包API的ios实现.\n")])])]),a._v(" "),o("li",[o("p",[o("code",[a._v("example/")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   一个依赖于该插件的Flutter应用程序，来说明如何使用它\n")])]),a._v(" "),o("p",[a._v("默认情况下，插件项目针对iOS代码使用Objective-C，Android代码使用Java。如果您更喜欢Swift或Kotlin，则可以使用"),o("code",[a._v("-i")]),a._v(" 或 "),o("code",[a._v("-a")]),a._v(" 为iOS或Android指定语言。例如：\n"),o("pre",{staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px","white-space":"pre-wrap",padding:"8.0px 12.0px","line-height":"1.42857",color:"rgb(52,73,94)","background-color":"rgb(245,245,245)",border:"1.0px solid rgb(204,204,204)","margin-top":"25.0px","margin-bottom":"25.0px"}},[o("code",[a._v('<span class="noselect" style="">$ </span>flutter create --template=plugin -i swift -a kotlin hello')])])]),a._v(" "),o("h3",{attrs:{id:"step-2-实现包-package"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2-实现包-package","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2: 实现包 package")]),a._v(" "),o("p",[a._v("由于插件包中包含用多种编程语言编写的多个平台的代码，因此需要一些特定的步骤来确保顺畅的体验。")]),a._v(" "),o("h4",{attrs:{id:"step-2a-定义包api（-dart）"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2a-定义包api（-dart）","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2a: 定义包API（.dart）")]),a._v(" "),o("p",[a._v("插件包的API在Dart代码中定义。打开主文件夹"),o("code",[a._v("hello/")]),a._v("。找到"),o("code",[a._v("lib/hello.dart")])]),a._v(" "),o("h4",{attrs:{id:"step-2b-添加android平台代码（-java-kt）"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2b-添加android平台代码（-java-kt）","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2b: 添加Android平台代码（.java / .kt）")]),a._v(" "),o("p",[a._v("我们建议您使用Android Studio编辑Android代码。")]),a._v(" "),o("p",[a._v("在Android Studio中编辑Android平台代码之前，首先确保代码至少已经构建过一次（例如，从IntelliJ运行示例应用程序或在终端执行"),o("code",[a._v("cd hello/example")]),a._v("; "),o("code",[a._v("flutter build apk")]),a._v("）")]),a._v(" "),o("p",[a._v("接下来")])])]),a._v(" "),o("ol",[o("li",[o("p",[a._v("启动Android Studio")])]),a._v(" "),o("li",[o("p",[a._v("在’Welcome to Android Studio’对话框选择 ‘Import project’, 或者在菜单栏 ‘File > New > Import Project…‘,然后选择"),o("code",[a._v("hello/example/android/build.gradle")]),a._v("文件.")])]),a._v(" "),o("li",[o("p",[a._v("在’Gradle Sync’ 对话框, 选择 ‘OK’.")])]),a._v(" "),o("li",[o("p",[a._v("在’Android Gradle Plugin Update’ 对话框, 选择 ‘Don’t remind me again for this project’.")]),a._v(" "),o("p",[a._v("您插件的Android平台代码位于 "),o("code",[a._v("hello/java/com.yourcompany.hello/HelloPlugin")]),a._v(".")]),a._v(" "),o("p",[a._v("您可以通过按下 ▶ 按钮从Android Studio运行示例应用程序.")]),a._v(" "),o("h4",{attrs:{id:"step-2c-添加ios平台代码-h-m-swift"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2c-添加ios平台代码-h-m-swift","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2c: 添加iOS平台代码 (.h+.m/.swift)")]),a._v(" "),o("p",[a._v("我们建议您使用Xcode编辑iOS代码 。")]),a._v(" "),o("p",[a._v("在编辑Xcode中的iOS平台代码之前，首先确保代码至少已经构建过一次（例如，从Xcode中运行示例应用程序或终端执行"),o("code",[a._v("cd hello/example")]),a._v("; "),o("code",[a._v("flutter build ios --no-codesign")]),a._v("）。")]),a._v(" "),o("p",[a._v("接下来")])]),a._v(" "),o("li",[o("p",[a._v("启动 Xcode")])]),a._v(" "),o("li",[o("p",[a._v("选择 ‘File > Open’, 然后选择 "),o("code",[a._v("hello/example/ios/Runner.xcworkspace")]),a._v(" 文件.")]),a._v(" "),o("p",[a._v("您插件的iOS平台代码位于"),o("code",[a._v("Pods/DevelopmentPods/hello/Classes/")]),a._v("中。")]),a._v(" "),o("p",[a._v("您可以通过按下&#9654按钮来运行示例应用程序")]),a._v(" "),o("h4",{attrs:{id:"step-2d-连接api和平台代码"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2d-连接api和平台代码","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2d: 连接API和平台代码")]),a._v(" "),o("p",[a._v("最后，您需要将用Dart代码编写的API与平台特定的实现连接起来。这是通过"),o("a",{attrs:{href:"https://flutterchina.club/platform-channels/",target:"_blank",rel:"noopener noreferrer"}},[a._v("platform channels"),o("OutboundLink")],1),a._v("完成的。")]),a._v(" "),o("h2",{attrs:{id:"添加文档"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#添加文档","aria-hidden":"true"}},[a._v("#")]),a._v(" 添加文档")]),a._v(" "),o("p",[a._v("建议将以下文档添加到所有软件包：")])]),a._v(" "),o("li",[o("p",[o("code",[a._v("README.md")]),a._v(":介绍包的文件")])]),a._v(" "),o("li",[o("p",[o("code",[a._v("CHANGELOG.md")]),a._v(" 记录每个版本中的更改")])]),a._v(" "),o("li",[o("p",[o("code",[a._v("LICENSE")]),a._v(" 包含软件包许可条款的文件")])]),a._v(" "),o("li",[o("p",[a._v("所有公共API的API文档 (详情见下文)")]),a._v(" "),o("h3",{attrs:{id:"api-documentation"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#api-documentation","aria-hidden":"true"}},[a._v("#")]),a._v(" API documentation")]),a._v(" "),o("p",[a._v("在发布软件包时，API文档会自动生成并发布到dartdocs.org，示例请参阅"),o("a",{attrs:{href:"https://www.dartdocs.org/documentation/device_info/0.0.4/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("device_info docs"),o("OutboundLink")],1)]),a._v(" "),o("p",[a._v("如果您希望在本地生成API文档，请使用以下命令：")])]),a._v(" "),o("li",[o("p",[a._v("将目录更改为您的软件包的位置:\n"),o("code",[a._v("cd ~/dev/mypackage")])])]),a._v(" "),o("li",[o("p",[a._v("告诉文档工具Flutter SDK的位置:\n"),o("code",[a._v("export FLUTTER_ROOT=~/dev/flutter")]),a._v(" (on macOS or Linux)\n"),o("code",[a._v("set FLUTTER_ROOT=~/dev/flutter")]),a._v(" (on Windows)")])]),a._v(" "),o("li",[o("p",[a._v("运行 "),o("code",[a._v("dartdoc")]),a._v(" 工具 (它是Flutter SDK的一部分):\n"),o("code",[a._v("$FLUTTER_ROOT/bin/cache/dart-sdk/bin/dartdoc")]),a._v(" (on macOS or Linux)\n"),o("code",[a._v("%FLUTTER_ROOT%\\bin\\cache\\dart-sdk\\bin\\dartdoc")]),a._v(" (on Windows)")]),a._v(" "),o("p",[a._v("有关如何编写API文档的提示，请参阅"),o("a",{attrs:{href:"https://www.dartlang.org/guides/language/effective-dart/documentation",target:"_blank",rel:"noopener noreferrer"}},[a._v("Effective Dart: Documentation"),o("OutboundLink")],1)]),a._v(" "),o("h2",{attrs:{id:"发布-packages"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#发布-packages","aria-hidden":"true"}},[a._v("#")]),a._v(" 发布 packages")]),a._v(" "),o("p",[a._v("一旦你实现了一个包，你可以在"),o("a",{attrs:{href:"https://pub.dartlang.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Pub"),o("OutboundLink")],1),a._v("上发布它 ，这样其他开发人员就可以轻松使用它")]),a._v(" "),o("p",[a._v("在发布之前，检查"),o("code",[a._v("pubspec.yaml")]),a._v("、"),o("code",[a._v("README.md")]),a._v("以及"),o("code",[a._v("CHANGELOG.md")]),a._v("文件，以确保其内容的完整性和正确性。")]),a._v(" "),o("p",[a._v("然后, 运行 dry-run 命令以查看是否都准备OK了:\n"),o("pre",{staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px","white-space":"pre-wrap",padding:"8.0px 12.0px","line-height":"1.42857",color:"rgb(52,73,94)","background-color":"rgb(245,245,245)",border:"1.0px solid rgb(204,204,204)","margin-top":"25.0px","margin-bottom":"25.0px"}},[o("code",[a._v('<span class="noselect" style="">$ </span>flutter packages pub publish --dry-run')])])]),a._v(" "),o("p",[a._v("最后, 运行发布命令:\n"),o("pre",{staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px","white-space":"pre-wrap",padding:"8.0px 12.0px","line-height":"1.42857",color:"rgb(52,73,94)","background-color":"rgb(245,245,245)",border:"1.0px solid rgb(204,204,204)","margin-top":"25.0px","margin-bottom":"25.0px"}},[o("code",[a._v('<span class="noselect" style="">$ </span>flutter packages pub publish')])])]),a._v(" "),o("p",[a._v("有关发布的详细信息，请参阅"),o("a",{attrs:{href:"https://www.dartlang.org/tools/pub/publishing",target:"_blank",rel:"noopener noreferrer"}},[a._v("Pub publishing docs"),o("OutboundLink")],1)]),a._v(" "),o("h2",{attrs:{id:"处理包的相互依赖"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#处理包的相互依赖","aria-hidden":"true"}},[a._v("#")]),a._v(" 处理包的相互依赖")]),a._v(" "),o("p",[a._v("如果您正在开发一个"),o("code",[a._v("hello")]),a._v("包，它依赖于另一个包，则需要将该依赖包添加到"),o("code",[a._v("pubspec.yaml")]),a._v("文件的"),o("code",[a._v("dependencies")]),a._v("部分。 下面的代码使"),o("code",[a._v("url_launcher")]),a._v("插件的Dart API ，这在"),o("code",[a._v("hello")]),a._v("包中是可用的：")]),a._v(" "),o("p",[a._v("In "),o("code",[a._v("hello/pubspec.yaml")]),a._v(":\n")]),o("div",{staticClass:"language-yaml highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-yaml",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[o("code",[a._v('<span class="na" style="">dependencies</span><span class="pi" style="">:</span> <span class="na" style="">url_launcher</span><span class="pi" style="">:</span> <span class="s" style="">^0.4.2</span>')])])])]),o("p"),a._v(" "),o("p",[a._v("现在你可以在"),o("code",[a._v("hello")]),a._v("中"),o("code",[a._v("import 'package:url_launcher/url_launcher.dart'")]),a._v(" 然后 "),o("code",[a._v("launch(someUrl)")]),a._v(" 了。")]),a._v(" "),o("p",[a._v("这与在Flutter应用程序或任何其他Dart项目中引用软件包没有什么不同")]),a._v(" "),o("p",[a._v("但是，如果"),o("code",[a._v("hello")]),a._v("碰巧是一个插件包，其平台特定的代码需要访问"),o("code",[a._v("url_launcher")]),a._v("公开的特定于平台的API，那么您还需要为特定于平台的构建文件添加合适的依赖声明，如下所示。")]),a._v(" "),o("h3",{attrs:{id:"android"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#android","aria-hidden":"true"}},[a._v("#")]),a._v(" Android")]),a._v(" "),o("p",[a._v("在 "),o("code",[a._v("hello/android/build.gradle")]),a._v(":\n")]),o("div",{staticClass:"language-groovy highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-groovy",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[o("code",[a._v('<span class="n" style="">android</span> <span class="o" style="">{</span> <span class="c1" style="">// lines skipped</span> <span class="n" style="">dependencies</span> <span class="o" style="">{</span> <span class="n" style="">provided</span> <span class="n" style="">rootProject</span><span class="o" style="">.</span><span class="na" style="">findProject</span><span class="o" style="">(</span><span class="s2" style="">&quot;:url_launcher&quot;</span><span class="o" style="">)</span> <span class="o" style="">}</span> <span class="o" style="">}</span>')])])])]),o("p"),a._v(" "),o("p",[a._v("您现在可以在"),o("code",[a._v("hello/android/src")]),a._v("源码中"),o("code",[a._v("import io.flutter.plugins.urllauncher.UrlLauncherPlugin")]),a._v("访问"),o("code",[a._v("UrlLauncherPlugin")]),a._v("类")]),a._v(" "),o("h3",{attrs:{id:"ios"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#ios","aria-hidden":"true"}},[a._v("#")]),a._v(" iOS")]),a._v(" "),o("p",[a._v("在"),o("code",[a._v("hello/ios/hello.podspec")]),a._v(":\n")]),o("div",{staticClass:"language-ruby highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-ruby",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[o("code",[a._v('<span class="no" style="">Pod</span><span class="o" style="">::</span><span class="no" style="">Spec</span><span class="p" style="">.</span><span class="nf" style="">new</span> <span class="k" style="">do</span> <span class="o" style="">|</span><span class="n" style="">s</span><span class="o" style="">|</span> <span class="c1" style=""># lines skipped</span> <span class="n" style="">s</span><span class="p" style="">.</span><span class="nf" style="">dependency</span> <span class="s1" style="">\'url_launcher\'</span>')])])])]),o("p"),a._v(" "),o("p",[a._v("您现在可以在"),o("code",[a._v("hello/ios/Classes")]),a._v("源码中 "),o("code",[a._v("#import &quot;UrlLauncherPlugin.h&quot;")]),a._v(" 然后访问 "),o("code",[a._v("UrlLauncherPlugin")]),a._v(" 类")]),a._v(" "),o("h3",{attrs:{id:"解决冲突"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突","aria-hidden":"true"}},[a._v("#")]),a._v(" 解决冲突")]),a._v(" "),o("p",[a._v("假设你想在你的"),o("code",[a._v("hello")]),a._v("包中使用"),o("code",[a._v("some_package")]),a._v("和"),o("code",[a._v("other_package")]),a._v("，并且这两个包都依赖"),o("code",[a._v("url_launcher")]),a._v("，但是依赖的是"),o("code",[a._v("url_launcher")]),a._v("的不同的版本。 那我们就有潜在的冲突。避免这种情况的最好方法是在指定依赖关系时，程序包作者使用"),o("a",{attrs:{href:"https://www.dartlang.org/tools/pub/dependencies#version-constraints",target:"_blank",rel:"noopener noreferrer"}},[a._v("版本范围"),o("OutboundLink")],1),a._v("而不是特定版本。\n")]),o("div",{staticClass:"language-yaml highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-yaml",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[o("code",[a._v('<span class="na" style="">dependencies</span><span class="pi" style="">:</span> <span class="na" style="">url_launcher</span><span class="pi" style="">:</span> <span class="s" style="">^0.4.2</span> <span class="c1" style=""># Good, any 0.4.x with x >= 2 will do.</span> <span class="na" style="">image_picker</span><span class="pi" style="">:</span> <span class="s1" style="">\'</span><span class="s" style="">0.1.1\'</span> <span class="c1" style=""># Not so good, only 0.1.1 will do.</span>')])])])]),o("p"),a._v(" "),o("p",[a._v("如果"),o("code",[a._v("some_package")]),a._v("声明了上面的依赖关系,"),o("code",[a._v("other_package")]),a._v("声明了"),o("code",[a._v("url_launcher")]),a._v("版本像’0.4.5’或’^0.4.0’，pub将能够自动解决问题。 类似的注释适用于插件包对Gradle模块和"),o("a",{attrs:{href:"https://guides.cocoapods.org/syntax/podspec.html#dependency",target:"_blank",rel:"noopener noreferrer"}},[a._v("Cocoa pods"),o("OutboundLink")],1),a._v("的平台特定的依赖关系。")]),a._v(" "),o("p",[a._v("即使"),o("code",[a._v("some_package")]),a._v("和"),o("code",[a._v("other_package")]),a._v("声明了不兼容的"),o("code",[a._v("url_launcher")]),a._v("版本，它仍然可能会和"),o("code",[a._v("url_launcher")]),a._v("以兼容的方式正常工作。 你可以通过向"),o("code",[a._v("hello")]),a._v("包的"),o("code",[a._v("pubspec.yaml")]),a._v("文件中添加依赖性覆盖声明来处理冲突，从而强制使用特定版本：")]),a._v(" "),o("p",[a._v("强制使用 "),o("code",[a._v("0.4.3")]),a._v("版本的"),o("code",[a._v("url_launcher")]),a._v("，在 "),o("code",[a._v("hello/pubspec.yaml")]),a._v("中:\n")]),o("div",{staticClass:"language-yaml highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-yaml",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[o("code",[a._v('<span class="na" style="">dependencies</span><span class="pi" style="">:</span> <span class="na" style="">some_package</span><span class="pi" style="">:</span> <span class="na" style="">other_package</span><span class="pi" style="">:</span> <span class="na" style="">dependency_overrides</span><span class="pi" style="">:</span> <span class="na" style="">url_launcher</span><span class="pi" style="">:</span> <span class="s1" style="">\'</span><span class="s" style="">0.4.3\'</span>')])])])]),o("p"),a._v(" "),o("p",[a._v("如果冲突的依赖不是一个包，而是一个特定于Android的库，比如"),o("code",[a._v("guava")]),a._v("，那么必须将依赖重写声明添加到Gradle构建逻辑中。")]),a._v(" "),o("p",[a._v("强制使用"),o("code",[a._v("23.0")]),a._v("版本的"),o("code",[a._v("guava")]),a._v("库，在"),o("code",[a._v("hello/android/build.gradle")]),a._v("中：\n")]),o("div",{staticClass:"language-groovy highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-groovy",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[o("code",[a._v('<span class="n" style="">configurations</span><span class="o" style="">.</span><span class="na" style="">all</span> <span class="o" style="">{</span> <span class="n" style="">resolutionStrategy</span> <span class="o" style="">{</span> <span class="n" style="">force</span> <span class="s1" style="">\'com.google.guava:guava:23.0-android\'</span> <span class="o" style="">}</span> <span class="o" style="">}</span>')])])])]),o("p"),a._v(" "),o("p",[a._v("Cocoapods目前不提供依赖覆盖功能。")]),a._v(" "),o("h2",{attrs:{id:"package-介绍-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#package-介绍-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Package 介绍")]),a._v(" "),o("p",[a._v("使用package可以创建可轻松共享的模块化代码。一个最小的package包括")])])]),a._v(" "),o("ul",[o("li",[o("p",[a._v("一个"),o("code",[a._v("pubspec.yaml")]),a._v("文件：声明了package的名称、版本、作者等的元数据文件。")])]),a._v(" "),o("li",[o("p",[a._v("一个 "),o("code",[a._v("lib")]),a._v(" 文件夹：包括包中公开的(public)代码，最少应有一个<;package-name>.dart`文件")]),a._v(" "),o("h3",{attrs:{id:"package-类型-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#package-类型-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Package 类型")]),a._v(" "),o("p",[a._v("Packages可以包含多种内容：")])]),a._v(" "),o("li",[o("p",[a._v("Dart包：其中一些可能包含Flutter的特定功能，因此对Flutter框架具有依赖性，仅将其用于Flutter，例如"),o("a",{attrs:{href:"https://pub.dartlang.org/packages/fluro",target:"_blank",rel:"noopener noreferrer"}},[o("code",[a._v("fluro")]),o("OutboundLink")],1),a._v("包。")])]),a._v(" "),o("li",[o("p",[a._v("插件包：一种专用的Dart包，其中包含用Dart代码编写的API，以及针对Android（使用Java或Kotlin）和/或针对iOS（使用ObjC或Swift）平台的特定实现。一个具体的例子是"),o("a",{attrs:{href:"https://pub.dartlang.org/packages/battery",target:"_blank",rel:"noopener noreferrer"}},[o("code",[a._v("battery")]),o("OutboundLink")],1),a._v("插件包。")]),a._v(" "),o("h2",{attrs:{id:"developing-dart-packages-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#developing-dart-packages-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Developing Dart packages")]),a._v(" "),o("h3",{attrs:{id:"step-1-开发dart包-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-1-开发dart包-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 1: 开发Dart包")]),a._v(" "),o("p",[a._v("要创建Dart包，请使用"),o("code",[a._v("--template=package")]),a._v(" 来执行 "),o("code",[a._v("flutter create")]),a._v(" "),o("pre",{staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px","white-space":"pre-wrap",padding:"8.0px 12.0px","line-height":"1.42857",color:"rgb(52,73,94)","background-color":"rgb(245,245,245)",border:"1.0px solid rgb(204,204,204)","margin-top":"25.0px","margin-bottom":"25.0px"}},[o("code",[a._v('<span class="noselect" style="">$ </span>flutter create --template=package hello')])])]),a._v(" "),o("p",[a._v("这将在"),o("code",[a._v("hello/")]),a._v("文件夹下创建一个具有以下专用内容的package工程：")])]),a._v(" "),o("li",[o("p",[o("code",[a._v("lib/hello.dart")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   Package的Dart代码\n")])])]),a._v(" "),o("li",[o("p",[o("code",[a._v("test/hello_test.dart")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   Package的[单元测试](https://flutter.io/testing/#unit-testing)代码.\n")])]),a._v(" "),o("h3",{attrs:{id:"step-2-实现package-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2-实现package-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2: 实现package")]),a._v(" "),o("p",[a._v("对于纯Dart包，只需在主"),o("code",[a._v("lib/&lt;package name>.dart")]),a._v("文件内或"),o("code",[a._v("lib")]),a._v("目录中的文件中添加功能 。")]),a._v(" "),o("p",[a._v("要测试软件包，请在"),o("code",[a._v("test")]),a._v("目录中添加"),o("a",{attrs:{href:"https://flutter.io/testing/#unit-testing",target:"_blank",rel:"noopener noreferrer"}},[a._v("unit tests"),o("OutboundLink")],1),a._v("。")]),a._v(" "),o("p",[a._v("有关如何组织包内容的更多详细信息，请参阅"),o("a",{attrs:{href:"https://www.dartlang.org/guides/libraries/create-library-packages",target:"_blank",rel:"noopener noreferrer"}},[a._v("Dart library package"),o("OutboundLink")],1),a._v("文档。")]),a._v(" "),o("h2",{attrs:{id:"开发插件包-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#开发插件包-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 开发插件包")]),a._v(" "),o("p",[a._v("如果你想开发一个调用特定平台API的包，你需要开发一个插件包，插件包是Dart包的专用版本。 插件包包含针对Android（Java或Kotlin代码）或iOS（Objective-C或Swift代码）编写的特定于平台的实现（可以同时包含Android和Ios原生的代码）。 API使用"),o("a",{attrs:{href:"https://flutterchina.club/platform-channels/",target:"_blank",rel:"noopener noreferrer"}},[a._v("platform channels"),o("OutboundLink")],1),a._v("连接到特定平台（Android或IOS）。")]),a._v(" "),o("h3",{attrs:{id:"step-1-创建-package-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-1-创建-package-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 1: 创建 package")]),a._v(" "),o("p",[a._v("要创建插件包，请使用"),o("code",[a._v("--template=plugin")]),a._v("参数执行"),o("code",[a._v("flutter create")])]),a._v(" "),o("p",[a._v("使用"),o("code",[a._v("--org")]),a._v("选项指定您的组织，并使用反向域名表示法。该值用于生成的Android和iOS代码中的各种包和包标识符。\n"),o("pre",{staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px","white-space":"pre-wrap",padding:"8.0px 12.0px","line-height":"1.42857",color:"rgb(52,73,94)","background-color":"rgb(245,245,245)",border:"1.0px solid rgb(204,204,204)","margin-top":"25.0px","margin-bottom":"25.0px"}},[o("code",[a._v('<span class="noselect" style="">$ </span>flutter create --org com.example --template=plugin hello')])])]),a._v(" "),o("p",[a._v("这将在"),o("code",[a._v("hello/")]),a._v("文件夹下创建一个具有以下专用内容的插件工程：")])]),a._v(" "),o("li",[o("p",[o("code",[a._v("lib/hello.dart")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   插件包的Dart API.\n")])])]),a._v(" "),o("li",[o("p",[o("code",[a._v("android/src/main/java/com/yourcompany/hello/HelloPlugin.java")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   插件包API的Android实现.\n")])])]),a._v(" "),o("li",[o("p",[o("code",[a._v("ios/Classes/HelloPlugin.m")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   插件包API的ios实现.\n")])])]),a._v(" "),o("li",[o("p",[o("code",[a._v("example/")]),a._v(":")]),a._v(" "),o("pre",[o("code",[a._v("*   一个依赖于该插件的Flutter应用程序，来说明如何使用它\n")])]),a._v(" "),o("p",[a._v("默认情况下，插件项目针对iOS代码使用Objective-C，Android代码使用Java。如果您更喜欢Swift或Kotlin，则可以使用"),o("code",[a._v("-i")]),a._v(" 或 "),o("code",[a._v("-a")]),a._v(" 为iOS或Android指定语言。例如：\n"),o("pre",{staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px","white-space":"pre-wrap",padding:"8.0px 12.0px","line-height":"1.42857",color:"rgb(52,73,94)","background-color":"rgb(245,245,245)",border:"1.0px solid rgb(204,204,204)","margin-top":"25.0px","margin-bottom":"25.0px"}},[o("code",[a._v('<span class="noselect" style="">$ </span>flutter create --template=plugin -i swift -a kotlin hello')])])]),a._v(" "),o("h3",{attrs:{id:"step-2-实现包-package-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2-实现包-package-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2: 实现包 package")]),a._v(" "),o("p",[a._v("由于插件包中包含用多种编程语言编写的多个平台的代码，因此需要一些特定的步骤来确保顺畅的体验。")]),a._v(" "),o("h4",{attrs:{id:"step-2a-定义包api（-dart）-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2a-定义包api（-dart）-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2a: 定义包API（.dart）")]),a._v(" "),o("p",[a._v("插件包的API在Dart代码中定义。打开主文件夹"),o("code",[a._v("hello/")]),a._v("。找到"),o("code",[a._v("lib/hello.dart")])]),a._v(" "),o("h4",{attrs:{id:"step-2b-添加android平台代码（-java-kt）-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2b-添加android平台代码（-java-kt）-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2b: 添加Android平台代码（.java / .kt）")]),a._v(" "),o("p",[a._v("我们建议您使用Android Studio编辑Android代码。")]),a._v(" "),o("p",[a._v("在Android Studio中编辑Android平台代码之前，首先确保代码至少已经构建过一次（例如，从IntelliJ运行示例应用程序或在终端执行"),o("code",[a._v("cd hello/example")]),a._v("; "),o("code",[a._v("flutter build apk")]),a._v("）")]),a._v(" "),o("p",[a._v("接下来")])])]),a._v(" "),o("ol",[o("li",[o("p",[a._v("启动Android Studio")])]),a._v(" "),o("li",[o("p",[a._v("在’Welcome to Android Studio’对话框选择 ‘Import project’, 或者在菜单栏 ‘File > New > Import Project…‘,然后选择"),o("code",[a._v("hello/example/android/build.gradle")]),a._v("文件.")])]),a._v(" "),o("li",[o("p",[a._v("在’Gradle Sync’ 对话框, 选择 ‘OK’.")])]),a._v(" "),o("li",[o("p",[a._v("在’Android Gradle Plugin Update’ 对话框, 选择 ‘Don’t remind me again for this project’.")]),a._v(" "),o("p",[a._v("您插件的Android平台代码位于 "),o("code",[a._v("hello/java/com.yourcompany.hello/HelloPlugin")]),a._v(".")]),a._v(" "),o("p",[a._v("您可以通过按下 ▶ 按钮从Android Studio运行示例应用程序.")]),a._v(" "),o("h4",{attrs:{id:"step-2c-添加ios平台代码-h-m-swift-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2c-添加ios平台代码-h-m-swift-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2c: 添加iOS平台代码 (.h+.m/.swift)")]),a._v(" "),o("p",[a._v("我们建议您使用Xcode编辑iOS代码 。")]),a._v(" "),o("p",[a._v("在编辑Xcode中的iOS平台代码之前，首先确保代码至少已经构建过一次（例如，从Xcode中运行示例应用程序或终端执行"),o("code",[a._v("cd hello/example")]),a._v("; "),o("code",[a._v("flutter build ios --no-codesign")]),a._v("）。")]),a._v(" "),o("p",[a._v("接下来")])]),a._v(" "),o("li",[o("p",[a._v("启动 Xcode")])]),a._v(" "),o("li",[o("p",[a._v("选择 ‘File > Open’, 然后选择 "),o("code",[a._v("hello/example/ios/Runner.xcworkspace")]),a._v(" 文件.")]),a._v(" "),o("p",[a._v("您插件的iOS平台代码位于"),o("code",[a._v("Pods/DevelopmentPods/hello/Classes/")]),a._v("中。")]),a._v(" "),o("p",[a._v("您可以通过按下&#9654按钮来运行示例应用程序")]),a._v(" "),o("h4",{attrs:{id:"step-2d-连接api和平台代码-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#step-2d-连接api和平台代码-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Step 2d: 连接API和平台代码")]),a._v(" "),o("p",[a._v("最后，您需要将用Dart代码编写的API与平台特定的实现连接起来。这是通过"),o("a",{attrs:{href:"https://flutterchina.club/platform-channels/",target:"_blank",rel:"noopener noreferrer"}},[a._v("platform channels"),o("OutboundLink")],1),a._v("完成的。")]),a._v(" "),o("h2",{attrs:{id:"添加文档-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#添加文档-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 添加文档")]),a._v(" "),o("p",[a._v("建议将以下文档添加到所有软件包：")])]),a._v(" "),o("li",[o("p",[o("code",[a._v("README.md")]),a._v(":介绍包的文件")])]),a._v(" "),o("li",[o("p",[o("code",[a._v("CHANGELOG.md")]),a._v(" 记录每个版本中的更改")])]),a._v(" "),o("li",[o("p",[o("code",[a._v("LICENSE")]),a._v(" 包含软件包许可条款的文件")])]),a._v(" "),o("li",[o("p",[a._v("所有公共API的API文档 (详情见下文)")]),a._v(" "),o("h3",{attrs:{id:"api-documentation-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#api-documentation-2","aria-hidden":"true"}},[a._v("#")]),a._v(" API documentation")]),a._v(" "),o("p",[a._v("在发布软件包时，API文档会自动生成并发布到dartdocs.org，示例请参阅"),o("a",{attrs:{href:"https://www.dartdocs.org/documentation/device_info/0.0.4/index.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("device_info docs"),o("OutboundLink")],1)]),a._v(" "),o("p",[a._v("如果您希望在本地生成API文档，请使用以下命令：")])]),a._v(" "),o("li",[o("p",[a._v("将目录更改为您的软件包的位置:\n"),o("code",[a._v("cd ~/dev/mypackage")])])]),a._v(" "),o("li",[o("p",[a._v("告诉文档工具Flutter SDK的位置:\n"),o("code",[a._v("export FLUTTER_ROOT=~/dev/flutter")]),a._v(" (on macOS or Linux)\n"),o("code",[a._v("set FLUTTER_ROOT=~/dev/flutter")]),a._v(" (on Windows)")])]),a._v(" "),o("li",[o("p",[a._v("运行 "),o("code",[a._v("dartdoc")]),a._v(" 工具 (它是Flutter SDK的一部分):\n"),o("code",[a._v("$FLUTTER_ROOT/bin/cache/dart-sdk/bin/dartdoc")]),a._v(" (on macOS or Linux)\n"),o("code",[a._v("%FLUTTER_ROOT%\\bin\\cache\\dart-sdk\\bin\\dartdoc")]),a._v(" (on Windows)")]),a._v(" "),o("p",[a._v("有关如何编写API文档的提示，请参阅"),o("a",{attrs:{href:"https://www.dartlang.org/guides/language/effective-dart/documentation",target:"_blank",rel:"noopener noreferrer"}},[a._v("Effective Dart: Documentation"),o("OutboundLink")],1)]),a._v(" "),o("h2",{attrs:{id:"发布-packages-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#发布-packages-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 发布 packages")]),a._v(" "),o("p",[a._v("一旦你实现了一个包，你可以在"),o("a",{attrs:{href:"https://pub.dartlang.org/",target:"_blank",rel:"noopener noreferrer"}},[a._v("Pub"),o("OutboundLink")],1),a._v("上发布它 ，这样其他开发人员就可以轻松使用它")]),a._v(" "),o("p",[a._v("在发布之前，检查"),o("code",[a._v("pubspec.yaml")]),a._v("、"),o("code",[a._v("README.md")]),a._v("以及"),o("code",[a._v("CHANGELOG.md")]),a._v("文件，以确保其内容的完整性和正确性。")]),a._v(" "),o("p",[a._v("然后, 运行 dry-run 命令以查看是否都准备OK了:\n"),o("pre",{staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px","white-space":"pre-wrap",padding:"8.0px 12.0px","line-height":"1.42857",color:"rgb(52,73,94)","background-color":"rgb(245,245,245)",border:"1.0px solid rgb(204,204,204)","margin-top":"25.0px","margin-bottom":"25.0px"}},[o("code",[a._v('<span class="noselect" style="">$ </span>flutter packages pub publish --dry-run')])])]),a._v(" "),o("p",[a._v("最后, 运行发布命令:\n"),o("pre",{staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px","white-space":"pre-wrap",padding:"8.0px 12.0px","line-height":"1.42857",color:"rgb(52,73,94)","background-color":"rgb(245,245,245)",border:"1.0px solid rgb(204,204,204)","margin-top":"25.0px","margin-bottom":"25.0px"}},[o("code",[a._v('<span class="noselect" style="">$ </span>flutter packages pub publish')])])]),a._v(" "),o("p",[a._v("有关发布的详细信息，请参阅"),o("a",{attrs:{href:"https://www.dartlang.org/tools/pub/publishing",target:"_blank",rel:"noopener noreferrer"}},[a._v("Pub publishing docs"),o("OutboundLink")],1)]),a._v(" "),o("h2",{attrs:{id:"处理包的相互依赖-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#处理包的相互依赖-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 处理包的相互依赖")]),a._v(" "),o("p",[a._v("如果您正在开发一个"),o("code",[a._v("hello")]),a._v("包，它依赖于另一个包，则需要将该依赖包添加到"),o("code",[a._v("pubspec.yaml")]),a._v("文件的"),o("code",[a._v("dependencies")]),a._v("部分。 下面的代码使"),o("code",[a._v("url_launcher")]),a._v("插件的Dart API ，这在"),o("code",[a._v("hello")]),a._v("包中是可用的：")]),a._v(" "),o("p",[a._v("In "),o("code",[a._v("hello/pubspec.yaml")]),a._v(":\n")]),o("div",{staticClass:"language-yaml highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-yaml",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[o("code",[a._v('<span class="na" style="">dependencies</span><span class="pi" style="">:</span> <span class="na" style="">url_launcher</span><span class="pi" style="">:</span> <span class="s" style="">^0.4.2</span>')])])])]),o("p"),a._v(" "),o("p",[a._v("现在你可以在"),o("code",[a._v("hello")]),a._v("中"),o("code",[a._v("import 'package:url_launcher/url_launcher.dart'")]),a._v(" 然后 "),o("code",[a._v("launch(someUrl)")]),a._v(" 了。")]),a._v(" "),o("p",[a._v("这与在Flutter应用程序或任何其他Dart项目中引用软件包没有什么不同")]),a._v(" "),o("p",[a._v("但是，如果"),o("code",[a._v("hello")]),a._v("碰巧是一个插件包，其平台特定的代码需要访问"),o("code",[a._v("url_launcher")]),a._v("公开的特定于平台的API，那么您还需要为特定于平台的构建文件添加合适的依赖声明，如下所示。")]),a._v(" "),o("h3",{attrs:{id:"android-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#android-2","aria-hidden":"true"}},[a._v("#")]),a._v(" Android")]),a._v(" "),o("p",[a._v("在 "),o("code",[a._v("hello/android/build.gradle")]),a._v(":\n")]),o("div",{staticClass:"language-groovy highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-groovy",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[o("code",[a._v('<span class="n" style="">android</span> <span class="o" style="">{</span> <span class="c1" style="">// lines skipped</span> <span class="n" style="">dependencies</span> <span class="o" style="">{</span> <span class="n" style="">provided</span> <span class="n" style="">rootProject</span><span class="o" style="">.</span><span class="na" style="">findProject</span><span class="o" style="">(</span><span class="s2" style="">&quot;:url_launcher&quot;</span><span class="o" style="">)</span> <span class="o" style="">}</span> <span class="o" style="">}</span>')])])])]),o("p"),a._v(" "),o("p",[a._v("您现在可以在"),o("code",[a._v("hello/android/src")]),a._v("源码中"),o("code",[a._v("import io.flutter.plugins.urllauncher.UrlLauncherPlugin")]),a._v("访问"),o("code",[a._v("UrlLauncherPlugin")]),a._v("类")]),a._v(" "),o("h3",{attrs:{id:"ios-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#ios-2","aria-hidden":"true"}},[a._v("#")]),a._v(" iOS")]),a._v(" "),o("p",[a._v("在"),o("code",[a._v("hello/ios/hello.podspec")]),a._v(":\n")]),o("div",{staticClass:"language-ruby highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-ruby",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[o("code",[a._v('<span class="no" style="">Pod</span><span class="o" style="">::</span><span class="no" style="">Spec</span><span class="p" style="">.</span><span class="nf" style="">new</span> <span class="k" style="">do</span> <span class="o" style="">|</span><span class="n" style="">s</span><span class="o" style="">|</span> <span class="c1" style=""># lines skipped</span> <span class="n" style="">s</span><span class="p" style="">.</span><span class="nf" style="">dependency</span> <span class="s1" style="">\'url_launcher\'</span>')])])])]),o("p"),a._v(" "),o("p",[a._v("您现在可以在"),o("code",[a._v("hello/ios/Classes")]),a._v("源码中 "),o("code",[a._v("#import &quot;UrlLauncherPlugin.h&quot;")]),a._v(" 然后访问 "),o("code",[a._v("UrlLauncherPlugin")]),a._v(" 类")]),a._v(" "),o("h3",{attrs:{id:"解决冲突-2"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突-2","aria-hidden":"true"}},[a._v("#")]),a._v(" 解决冲突")]),a._v(" "),o("p",[a._v("假设你想在你的"),o("code",[a._v("hello")]),a._v("包中使用"),o("code",[a._v("some_package")]),a._v("和"),o("code",[a._v("other_package")]),a._v("，并且这两个包都依赖"),o("code",[a._v("url_launcher")]),a._v("，但是依赖的是"),o("code",[a._v("url_launcher")]),a._v("的不同的版本。 那我们就有潜在的冲突。避免这种情况的最好方法是在指定依赖关系时，程序包作者使用"),o("a",{attrs:{href:"https://www.dartlang.org/tools/pub/dependencies#version-constraints",target:"_blank",rel:"noopener noreferrer"}},[a._v("版本范围"),o("OutboundLink")],1),a._v("而不是特定版本。\n")]),o("div",{staticClass:"language-yaml highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-yaml",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[o("code",[a._v('<span class="na" style="">dependencies</span><span class="pi" style="">:</span> <span class="na" style="">url_launcher</span><span class="pi" style="">:</span> <span class="s" style="">^0.4.2</span> <span class="c1" style=""># Good, any 0.4.x with x >= 2 will do.</span> <span class="na" style="">image_picker</span><span class="pi" style="">:</span> <span class="s1" style="">\'</span><span class="s" style="">0.1.1\'</span> <span class="c1" style=""># Not so good, only 0.1.1 will do.</span>')])])])]),o("p"),a._v(" "),o("p",[a._v("如果"),o("code",[a._v("some_package")]),a._v("声明了上面的依赖关系,"),o("code",[a._v("other_package")]),a._v("声明了"),o("code",[a._v("url_launcher")]),a._v("版本像’0.4.5’或’^0.4.0’，pub将能够自动解决问题。 类似的注释适用于插件包对Gradle模块和"),o("a",{attrs:{href:"https://guides.cocoapods.org/syntax/podspec.html#dependency",target:"_blank",rel:"noopener noreferrer"}},[a._v("Cocoa pods"),o("OutboundLink")],1),a._v("的平台特定的依赖关系。")]),a._v(" "),o("p",[a._v("即使"),o("code",[a._v("some_package")]),a._v("和"),o("code",[a._v("other_package")]),a._v("声明了不兼容的"),o("code",[a._v("url_launcher")]),a._v("版本，它仍然可能会和"),o("code",[a._v("url_launcher")]),a._v("以兼容的方式正常工作。 你可以通过向"),o("code",[a._v("hello")]),a._v("包的"),o("code",[a._v("pubspec.yaml")]),a._v("文件中添加依赖性覆盖声明来处理冲突，从而强制使用特定版本：")]),a._v(" "),o("p",[a._v("强制使用 "),o("code",[a._v("0.4.3")]),a._v("版本的"),o("code",[a._v("url_launcher")]),a._v("，在 "),o("code",[a._v("hello/pubspec.yaml")]),a._v("中:\n")]),o("div",{staticClass:"language-yaml highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-yaml",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[o("code",[a._v('<span class="na" style="">dependencies</span><span class="pi" style="">:</span> <span class="na" style="">some_package</span><span class="pi" style="">:</span> <span class="na" style="">other_package</span><span class="pi" style="">:</span> <span class="na" style="">dependency_overrides</span><span class="pi" style="">:</span> <span class="na" style="">url_launcher</span><span class="pi" style="">:</span> <span class="s1" style="">\'</span><span class="s" style="">0.4.3\'</span>')])])])]),o("p"),a._v(" "),o("p",[a._v("如果冲突的依赖不是一个包，而是一个特定于Android的库，比如"),o("code",[a._v("guava")]),a._v("，那么必须将依赖重写声明添加到Gradle构建逻辑中。")]),a._v(" "),o("p",[a._v("强制使用"),o("code",[a._v("23.0")]),a._v("版本的"),o("code",[a._v("guava")]),a._v("库，在"),o("code",[a._v("hello/android/build.gradle")]),a._v("中：\n")]),o("div",{staticClass:"language-groovy highlighter-rouge",staticStyle:{top:"-1.0px",margin:"0.0px 1.0px","font-size":"0.85em",padding:"3.0px 4.0px",color:"rgb(85,85,85)","background-color":"rgb(253,253,253)"}},[o("div",{staticClass:"highlight"},[o("pre",{staticClass:"highlight language-groovy",staticStyle:{"font-family":'SFMono-Regular , Menlo , "Roboto Mono" , Monaco , courier , monospace',"font-size":"13.0px",padding:"1.0em","margin-top":"0.5em","margin-bottom":"0.5em","line-height":"1.5",color:"black",border:"1.0px solid rgb(204,204,204)",overflow:"auto","text-shadow":"inherit","word-spacing":"normal","background-color":"rgb(247,247,247)"}},[a._v("`"),o("span",{staticClass:"n"},[a._v("configurations")]),o("span",{staticClass:"o"},[a._v(".")]),o("span",{staticClass:"na"},[a._v("all")]),a._v(" "),o("span",{staticClass:"o"},[a._v("{")]),a._v("\n"),o("span",{staticClass:"n"},[a._v("resolutionStrategy")]),a._v(" "),o("span",{staticClass:"o"},[a._v("{")]),a._v("\n"),o("span",{staticClass:"n"},[a._v("force")]),a._v(" "),o("span",{staticClass:"s1"},[a._v("'com.google.guava:guava:23.0-android'")]),a._v("\n"),o("span",{staticClass:"o"},[a._v("}")]),a._v("\n"),o("span",{staticClass:"o"},[a._v("}")]),o("p"),a._v("\n")])])])])]),a._v(" "),o("p",[a._v("Cocoapods目前不提供依赖覆盖功能。")]),a._v(" "),o("pre",[o("code",[a._v("    </div>")])])])},[],!1,null,null,null);e.default=s.exports}}]);